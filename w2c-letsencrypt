#!/bin/sh
#
# Copyright (c) Johannes Feichtner <johannes@web-wack.at>
# Released under the GNU GPLv3 License.
#
# chkconfig: on 99 99
# description: Letsencrypt for ESXi
#

# Paths for config and backup
BACKUP_CFG="/etc/renew.cfg.bak"
TARGET_CFG="/opt/w2c-letsencrypt/renew.cfg"
EXAMPLE_CFG="/opt/w2c-letsencrypt/renew.cfg.example"

# Config logic: only one action per run, BusyBox/ash compatible
if [ -f "$TARGET_CFG" ] && [ -f "$BACKUP_CFG" ]; then
    if [ "$TARGET_CFG" -nt "$BACKUP_CFG" ]; then
        cp -f "$TARGET_CFG" "$BACKUP_CFG"
        [ "$DEBUG" = "1" ] && echo "Backed up user renew.cfg to $BACKUP_CFG."
    elif [ "$BACKUP_CFG" -nt "$TARGET_CFG" ]; then
        cp -f "$BACKUP_CFG" "$TARGET_CFG"
        [ "$DEBUG" = "1" ] && echo "Restored user renew.cfg from backup."
    else
        [ "$DEBUG" = "1" ] && echo "renew.cfg and backup are the same age. No action taken."
    fi
elif [ -f "$TARGET_CFG" ]; then
    cp -f "$TARGET_CFG" "$BACKUP_CFG"
    [ "$DEBUG" = "1" ] && echo "Backed up user renew.cfg to $BACKUP_CFG."
elif [ -f "$BACKUP_CFG" ]; then
    cp -f "$BACKUP_CFG" "$TARGET_CFG"
    [ "$DEBUG" = "1" ] && echo "Restored user renew.cfg from backup."
elif [ -f "$EXAMPLE_CFG" ]; then
    cp -f "$EXAMPLE_CFG" "$TARGET_CFG"
    cp -f "$EXAMPLE_CFG" "$BACKUP_CFG"
    [ "$DEBUG" = "1" ] && echo "Created new renew.cfg from example."
else
    [ "$DEBUG" = "1" ] && echo "No renew.cfg, backup, or example found. No action taken."
fi

export PATH=/sbin:/usr/sbin:/bin:/usr/bin

log() {
   echo "$@"
   logger -p daemon.info -t "$0" "$@"
}

# Determine challenge type (env overrides config)
CHALLENGE_TYPE_ENV="$CHALLENGE_TYPE"
if [ -z "$CHALLENGE_TYPE_ENV" ] && [ -f "$TARGET_CFG" ]; then
    # shellcheck disable=SC1090
    . "$TARGET_CFG"
    CHALLENGE_TYPE_ENV="$CHALLENGE_TYPE"
fi

for action in "$@"; do
   log "Running '${action}' action";

   case "$action" in
      start)
         /opt/w2c-letsencrypt/renew.sh
         ;;

      remove)
         sed -i '/\/opt\/w2c-letsencrypt/d' /var/spool/cron/crontabs/root
         if [ "$CHALLENGE_TYPE_ENV" != "dns-01" ]; then
           sed -i '/acme-challenge/d' /etc/vmware/rhttpproxy/endpoints.conf
         fi
         /sbin/generate-certificates
         for s in /etc/init.d/*; do if $s | grep ssl_reset > /dev/null; then $s ssl_reset; fi; done
         ;;

      stop)
         true
         ;;

      status)
         true
         ;;

      install)
         true
         ;;

      upgrade)
         true
         ;;

      restart)
         "$0" stop
         "$0" start
         ;;

      *)
         echo "Usage: $(basename "$0") {start|stop|status|restart}"
         exit 1
   esac
done

exit 0
